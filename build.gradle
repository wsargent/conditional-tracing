plugins {
    id 'groovy'
    id 'java'
    id 'application'
}

group 'com.tersesystems'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    // https://docs.gradle.org/current/userguide/application_plugin.html
    mainClass = 'com.tersesystems.conditionalspans.Main'
}

if (!JavaVersion.current().isJava11Compatible()) {
    throw GradleException("JDK 11 or higher is required to build. " +
            "One option is to download it from https://adoptopenjdk.net/. If you believe you already " +
            "have it, please check that the JAVA_HOME environment variable is pointing at the " +
            "JDK 11 installation.")
}

dependencies {
    // LaunchDarkly SDK
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.3.0'

    // LaunchDarkly relies on SLF4J
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Use Groovy and get JSR-223 for free
    implementation 'org.codehaus.groovy:groovy-all:3.0.5'

    // https://github.com/honeycombio/honeycomb-opentelemetry-java
    implementation('io.honeycomb:honeycomb-opentelemetry-common:0.2.1')

    // If you want to use the logging reporter or swap out Honeycomb with something else...
    implementation group: 'io.opentelemetry', name: 'opentelemetry-api', version: '1.2.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-sdk', version: '1.2.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-sdk-trace', version: '1.2.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-exporter-logging', version: '1.2.0'
    implementation group: 'io.opentelemetry', name: 'opentelemetry-exporter-otlp', version: '1.2.0'
    // Used for sending OLTP
    implementation group: 'io.grpc', name: 'grpc-netty', version: '1.38.0'

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        compileOnly "javax.annotation:javax.annotation-api:1.3.2"
    }

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}